// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KVStore.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "KVStore.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace kvstore_ns {
class KeyValueSetDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<KeyValueSet>
     _instance;
} _KeyValueSet_default_instance_;
class TransactionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Transaction>
     _instance;
} _Transaction_default_instance_;

namespace protobuf_KVStore_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValueSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValueSet, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValueSet, typeinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValueSet, numberelements_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeyValueSet, bytebuffer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction, publisherid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction, systembyteorder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Transaction, keyvalueset_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(KeyValueSet)},
  { 9, -1, sizeof(Transaction)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_KeyValueSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Transaction_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "KVStore.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _KeyValueSet_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_KeyValueSet_default_instance_);_Transaction_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Transaction_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rKVStore.proto\022\nkvstore_ns\"o\n\013KeyValueS"
      "et\022\013\n\003key\030\001 \001(\t\022\'\n\010typeInfo\030\002 \001(\0162\025.kvst"
      "ore_ns.TYPE_Info\022\026\n\016numberElements\030\003 \001(\005"
      "\022\022\n\nbyteBuffer\030\004 \001(\014\"\275\001\n\013Transaction\022\023\n\013"
      "publisherID\030\001 \001(\005\022\021\n\ttimeStamp\030\002 \001(\003\022(\n\006"
      "action\030\003 \001(\0162\030.kvstore_ns.DBASE_Action\022."
      "\n\017systemByteOrder\030\004 \001(\0162\025.kvstore_ns.ARC"
      "H_Info\022,\n\013keyValueSet\030\005 \003(\0132\027.kvstore_ns"
      ".KeyValueSet*\035\n\014DBASE_Action\022\r\n\tDBASE_SE"
      "T\020\000*\214\001\n\tTYPE_Info\022\016\n\nTYPE_INT32\020\000\022\016\n\nTYP"
      "E_INT64\020\001\022\016\n\nTYPE_FLOAT\020\002\022\017\n\013TYPE_DOUBLE"
      "\020\003\022\r\n\tTYPE_BOOL\020\004\022\017\n\013TYPE_STRING\020\005\022\016\n\nTY"
      "PE_BYTES\020\006\022\016\n\nTYPE_EVENT\020\007*8\n\tARCH_Info\022"
      "\023\n\017ARCH_BIG_ENDIAN\020\000\022\026\n\022ARCH_LITTLE_ENDI"
      "AN\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 572);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "KVStore.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_KVStore_2eproto

const ::google::protobuf::EnumDescriptor* DBASE_Action_descriptor() {
  protobuf_KVStore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_KVStore_2eproto::file_level_enum_descriptors[0];
}
bool DBASE_Action_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TYPE_Info_descriptor() {
  protobuf_KVStore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_KVStore_2eproto::file_level_enum_descriptors[1];
}
bool TYPE_Info_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ARCH_Info_descriptor() {
  protobuf_KVStore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_KVStore_2eproto::file_level_enum_descriptors[2];
}
bool ARCH_Info_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValueSet::kKeyFieldNumber;
const int KeyValueSet::kTypeInfoFieldNumber;
const int KeyValueSet::kNumberElementsFieldNumber;
const int KeyValueSet::kByteBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValueSet::KeyValueSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_KVStore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvstore_ns.KeyValueSet)
}
KeyValueSet::KeyValueSet(const KeyValueSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  bytebuffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bytebuffer().size() > 0) {
    bytebuffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytebuffer_);
  }
  ::memcpy(&typeinfo_, &from.typeinfo_,
    static_cast<size_t>(reinterpret_cast<char*>(&numberelements_) -
    reinterpret_cast<char*>(&typeinfo_)) + sizeof(numberelements_));
  // @@protoc_insertion_point(copy_constructor:kvstore_ns.KeyValueSet)
}

void KeyValueSet::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytebuffer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&typeinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&numberelements_) -
      reinterpret_cast<char*>(&typeinfo_)) + sizeof(numberelements_));
  _cached_size_ = 0;
}

KeyValueSet::~KeyValueSet() {
  // @@protoc_insertion_point(destructor:kvstore_ns.KeyValueSet)
  SharedDtor();
}

void KeyValueSet::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytebuffer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyValueSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyValueSet::descriptor() {
  protobuf_KVStore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_KVStore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyValueSet& KeyValueSet::default_instance() {
  protobuf_KVStore_2eproto::InitDefaults();
  return *internal_default_instance();
}

KeyValueSet* KeyValueSet::New(::google::protobuf::Arena* arena) const {
  KeyValueSet* n = new KeyValueSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyValueSet::Clear() {
// @@protoc_insertion_point(message_clear_start:kvstore_ns.KeyValueSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytebuffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&typeinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&numberelements_) -
      reinterpret_cast<char*>(&typeinfo_)) + sizeof(numberelements_));
  _internal_metadata_.Clear();
}

bool KeyValueSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvstore_ns.KeyValueSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvstore_ns.KeyValueSet.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvstore_ns.TYPE_Info typeInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_typeinfo(static_cast< ::kvstore_ns::TYPE_Info >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 numberElements = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &numberelements_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes byteBuffer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytebuffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvstore_ns.KeyValueSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvstore_ns.KeyValueSet)
  return false;
#undef DO_
}

void KeyValueSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvstore_ns.KeyValueSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvstore_ns.KeyValueSet.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // .kvstore_ns.TYPE_Info typeInfo = 2;
  if (this->typeinfo() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->typeinfo(), output);
  }

  // int32 numberElements = 3;
  if (this->numberelements() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->numberelements(), output);
  }

  // bytes byteBuffer = 4;
  if (this->bytebuffer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->bytebuffer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvstore_ns.KeyValueSet)
}

::google::protobuf::uint8* KeyValueSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvstore_ns.KeyValueSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvstore_ns.KeyValueSet.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // .kvstore_ns.TYPE_Info typeInfo = 2;
  if (this->typeinfo() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->typeinfo(), target);
  }

  // int32 numberElements = 3;
  if (this->numberelements() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->numberelements(), target);
  }

  // bytes byteBuffer = 4;
  if (this->bytebuffer().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->bytebuffer(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvstore_ns.KeyValueSet)
  return target;
}

size_t KeyValueSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvstore_ns.KeyValueSet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // bytes byteBuffer = 4;
  if (this->bytebuffer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bytebuffer());
  }

  // .kvstore_ns.TYPE_Info typeInfo = 2;
  if (this->typeinfo() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->typeinfo());
  }

  // int32 numberElements = 3;
  if (this->numberelements() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->numberelements());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyValueSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvstore_ns.KeyValueSet)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValueSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValueSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvstore_ns.KeyValueSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvstore_ns.KeyValueSet)
    MergeFrom(*source);
  }
}

void KeyValueSet::MergeFrom(const KeyValueSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvstore_ns.KeyValueSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.bytebuffer().size() > 0) {

    bytebuffer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytebuffer_);
  }
  if (from.typeinfo() != 0) {
    set_typeinfo(from.typeinfo());
  }
  if (from.numberelements() != 0) {
    set_numberelements(from.numberelements());
  }
}

void KeyValueSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvstore_ns.KeyValueSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValueSet::CopyFrom(const KeyValueSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvstore_ns.KeyValueSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValueSet::IsInitialized() const {
  return true;
}

void KeyValueSet::Swap(KeyValueSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValueSet::InternalSwap(KeyValueSet* other) {
  using std::swap;
  key_.Swap(&other->key_);
  bytebuffer_.Swap(&other->bytebuffer_);
  swap(typeinfo_, other->typeinfo_);
  swap(numberelements_, other->numberelements_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyValueSet::GetMetadata() const {
  protobuf_KVStore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_KVStore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeyValueSet

// string key = 1;
void KeyValueSet::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& KeyValueSet::key() const {
  // @@protoc_insertion_point(field_get:kvstore_ns.KeyValueSet.key)
  return key_.GetNoArena();
}
void KeyValueSet::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:kvstore_ns.KeyValueSet.key)
}
#if LANG_CXX11
void KeyValueSet::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kvstore_ns.KeyValueSet.key)
}
#endif
void KeyValueSet::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kvstore_ns.KeyValueSet.key)
}
void KeyValueSet::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kvstore_ns.KeyValueSet.key)
}
::std::string* KeyValueSet::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:kvstore_ns.KeyValueSet.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* KeyValueSet::release_key() {
  // @@protoc_insertion_point(field_release:kvstore_ns.KeyValueSet.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KeyValueSet::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:kvstore_ns.KeyValueSet.key)
}

// .kvstore_ns.TYPE_Info typeInfo = 2;
void KeyValueSet::clear_typeinfo() {
  typeinfo_ = 0;
}
::kvstore_ns::TYPE_Info KeyValueSet::typeinfo() const {
  // @@protoc_insertion_point(field_get:kvstore_ns.KeyValueSet.typeInfo)
  return static_cast< ::kvstore_ns::TYPE_Info >(typeinfo_);
}
void KeyValueSet::set_typeinfo(::kvstore_ns::TYPE_Info value) {
  
  typeinfo_ = value;
  // @@protoc_insertion_point(field_set:kvstore_ns.KeyValueSet.typeInfo)
}

// int32 numberElements = 3;
void KeyValueSet::clear_numberelements() {
  numberelements_ = 0;
}
::google::protobuf::int32 KeyValueSet::numberelements() const {
  // @@protoc_insertion_point(field_get:kvstore_ns.KeyValueSet.numberElements)
  return numberelements_;
}
void KeyValueSet::set_numberelements(::google::protobuf::int32 value) {
  
  numberelements_ = value;
  // @@protoc_insertion_point(field_set:kvstore_ns.KeyValueSet.numberElements)
}

// bytes byteBuffer = 4;
void KeyValueSet::clear_bytebuffer() {
  bytebuffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& KeyValueSet::bytebuffer() const {
  // @@protoc_insertion_point(field_get:kvstore_ns.KeyValueSet.byteBuffer)
  return bytebuffer_.GetNoArena();
}
void KeyValueSet::set_bytebuffer(const ::std::string& value) {
  
  bytebuffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:kvstore_ns.KeyValueSet.byteBuffer)
}
#if LANG_CXX11
void KeyValueSet::set_bytebuffer(::std::string&& value) {
  
  bytebuffer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:kvstore_ns.KeyValueSet.byteBuffer)
}
#endif
void KeyValueSet::set_bytebuffer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bytebuffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:kvstore_ns.KeyValueSet.byteBuffer)
}
void KeyValueSet::set_bytebuffer(const void* value, size_t size) {
  
  bytebuffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:kvstore_ns.KeyValueSet.byteBuffer)
}
::std::string* KeyValueSet::mutable_bytebuffer() {
  
  // @@protoc_insertion_point(field_mutable:kvstore_ns.KeyValueSet.byteBuffer)
  return bytebuffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* KeyValueSet::release_bytebuffer() {
  // @@protoc_insertion_point(field_release:kvstore_ns.KeyValueSet.byteBuffer)
  
  return bytebuffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KeyValueSet::set_allocated_bytebuffer(::std::string* bytebuffer) {
  if (bytebuffer != NULL) {
    
  } else {
    
  }
  bytebuffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytebuffer);
  // @@protoc_insertion_point(field_set_allocated:kvstore_ns.KeyValueSet.byteBuffer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Transaction::kPublisherIDFieldNumber;
const int Transaction::kTimeStampFieldNumber;
const int Transaction::kActionFieldNumber;
const int Transaction::kSystemByteOrderFieldNumber;
const int Transaction::kKeyValueSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Transaction::Transaction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_KVStore_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvstore_ns.Transaction)
}
Transaction::Transaction(const Transaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keyvalueset_(from.keyvalueset_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&systembyteorder_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(systembyteorder_));
  // @@protoc_insertion_point(copy_constructor:kvstore_ns.Transaction)
}

void Transaction::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&systembyteorder_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(systembyteorder_));
  _cached_size_ = 0;
}

Transaction::~Transaction() {
  // @@protoc_insertion_point(destructor:kvstore_ns.Transaction)
  SharedDtor();
}

void Transaction::SharedDtor() {
}

void Transaction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Transaction::descriptor() {
  protobuf_KVStore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_KVStore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Transaction& Transaction::default_instance() {
  protobuf_KVStore_2eproto::InitDefaults();
  return *internal_default_instance();
}

Transaction* Transaction::New(::google::protobuf::Arena* arena) const {
  Transaction* n = new Transaction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Transaction::Clear() {
// @@protoc_insertion_point(message_clear_start:kvstore_ns.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keyvalueset_.Clear();
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&systembyteorder_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(systembyteorder_));
  _internal_metadata_.Clear();
}

bool Transaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvstore_ns.Transaction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 publisherID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &publisherid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timeStamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvstore_ns.DBASE_Action action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::kvstore_ns::DBASE_Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvstore_ns.ARCH_Info systemByteOrder = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_systembyteorder(static_cast< ::kvstore_ns::ARCH_Info >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kvstore_ns.KeyValueSet keyValueSet = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_keyvalueset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvstore_ns.Transaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvstore_ns.Transaction)
  return false;
#undef DO_
}

void Transaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvstore_ns.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 publisherID = 1;
  if (this->publisherid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->publisherid(), output);
  }

  // int64 timeStamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // .kvstore_ns.DBASE_Action action = 3;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->action(), output);
  }

  // .kvstore_ns.ARCH_Info systemByteOrder = 4;
  if (this->systembyteorder() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->systembyteorder(), output);
  }

  // repeated .kvstore_ns.KeyValueSet keyValueSet = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keyvalueset_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->keyvalueset(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvstore_ns.Transaction)
}

::google::protobuf::uint8* Transaction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvstore_ns.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 publisherID = 1;
  if (this->publisherid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->publisherid(), target);
  }

  // int64 timeStamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // .kvstore_ns.DBASE_Action action = 3;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->action(), target);
  }

  // .kvstore_ns.ARCH_Info systemByteOrder = 4;
  if (this->systembyteorder() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->systembyteorder(), target);
  }

  // repeated .kvstore_ns.KeyValueSet keyValueSet = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keyvalueset_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->keyvalueset(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvstore_ns.Transaction)
  return target;
}

size_t Transaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvstore_ns.Transaction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .kvstore_ns.KeyValueSet keyValueSet = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->keyvalueset_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->keyvalueset(static_cast<int>(i)));
    }
  }

  // int64 timeStamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // int32 publisherID = 1;
  if (this->publisherid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->publisherid());
  }

  // .kvstore_ns.DBASE_Action action = 3;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  // .kvstore_ns.ARCH_Info systemByteOrder = 4;
  if (this->systembyteorder() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->systembyteorder());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Transaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvstore_ns.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  const Transaction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Transaction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvstore_ns.Transaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvstore_ns.Transaction)
    MergeFrom(*source);
  }
}

void Transaction::MergeFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvstore_ns.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keyvalueset_.MergeFrom(from.keyvalueset_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.publisherid() != 0) {
    set_publisherid(from.publisherid());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
  if (from.systembyteorder() != 0) {
    set_systembyteorder(from.systembyteorder());
  }
}

void Transaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvstore_ns.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transaction::CopyFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvstore_ns.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transaction::IsInitialized() const {
  return true;
}

void Transaction::Swap(Transaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Transaction::InternalSwap(Transaction* other) {
  using std::swap;
  keyvalueset_.InternalSwap(&other->keyvalueset_);
  swap(timestamp_, other->timestamp_);
  swap(publisherid_, other->publisherid_);
  swap(action_, other->action_);
  swap(systembyteorder_, other->systembyteorder_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Transaction::GetMetadata() const {
  protobuf_KVStore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_KVStore_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Transaction

// int32 publisherID = 1;
void Transaction::clear_publisherid() {
  publisherid_ = 0;
}
::google::protobuf::int32 Transaction::publisherid() const {
  // @@protoc_insertion_point(field_get:kvstore_ns.Transaction.publisherID)
  return publisherid_;
}
void Transaction::set_publisherid(::google::protobuf::int32 value) {
  
  publisherid_ = value;
  // @@protoc_insertion_point(field_set:kvstore_ns.Transaction.publisherID)
}

// int64 timeStamp = 2;
void Transaction::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Transaction::timestamp() const {
  // @@protoc_insertion_point(field_get:kvstore_ns.Transaction.timeStamp)
  return timestamp_;
}
void Transaction::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:kvstore_ns.Transaction.timeStamp)
}

// .kvstore_ns.DBASE_Action action = 3;
void Transaction::clear_action() {
  action_ = 0;
}
::kvstore_ns::DBASE_Action Transaction::action() const {
  // @@protoc_insertion_point(field_get:kvstore_ns.Transaction.action)
  return static_cast< ::kvstore_ns::DBASE_Action >(action_);
}
void Transaction::set_action(::kvstore_ns::DBASE_Action value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:kvstore_ns.Transaction.action)
}

// .kvstore_ns.ARCH_Info systemByteOrder = 4;
void Transaction::clear_systembyteorder() {
  systembyteorder_ = 0;
}
::kvstore_ns::ARCH_Info Transaction::systembyteorder() const {
  // @@protoc_insertion_point(field_get:kvstore_ns.Transaction.systemByteOrder)
  return static_cast< ::kvstore_ns::ARCH_Info >(systembyteorder_);
}
void Transaction::set_systembyteorder(::kvstore_ns::ARCH_Info value) {
  
  systembyteorder_ = value;
  // @@protoc_insertion_point(field_set:kvstore_ns.Transaction.systemByteOrder)
}

// repeated .kvstore_ns.KeyValueSet keyValueSet = 5;
int Transaction::keyvalueset_size() const {
  return keyvalueset_.size();
}
void Transaction::clear_keyvalueset() {
  keyvalueset_.Clear();
}
const ::kvstore_ns::KeyValueSet& Transaction::keyvalueset(int index) const {
  // @@protoc_insertion_point(field_get:kvstore_ns.Transaction.keyValueSet)
  return keyvalueset_.Get(index);
}
::kvstore_ns::KeyValueSet* Transaction::mutable_keyvalueset(int index) {
  // @@protoc_insertion_point(field_mutable:kvstore_ns.Transaction.keyValueSet)
  return keyvalueset_.Mutable(index);
}
::kvstore_ns::KeyValueSet* Transaction::add_keyvalueset() {
  // @@protoc_insertion_point(field_add:kvstore_ns.Transaction.keyValueSet)
  return keyvalueset_.Add();
}
::google::protobuf::RepeatedPtrField< ::kvstore_ns::KeyValueSet >*
Transaction::mutable_keyvalueset() {
  // @@protoc_insertion_point(field_mutable_list:kvstore_ns.Transaction.keyValueSet)
  return &keyvalueset_;
}
const ::google::protobuf::RepeatedPtrField< ::kvstore_ns::KeyValueSet >&
Transaction::keyvalueset() const {
  // @@protoc_insertion_point(field_list:kvstore_ns.Transaction.keyValueSet)
  return keyvalueset_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace kvstore_ns

// @@protoc_insertion_point(global_scope)
